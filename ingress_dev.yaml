---
apiVersion: v1
kind: Namespace
metadata:
  name: client

---
apiVersion: v1
kind: Secret
metadata:
  name: caregcred
  namespace: client
data:
  .dockerconfigjson: >-
    eyJhdXRocyI6eyJkcmVnLmV1c3QwLmN5YmVyYXJtb3Jzb2Z0LmNvbTo0NDMiOnsidXNlcm5hbWUiOiJjYXVzZXIiLCJwYXNzd29yZCI6ImpZMzVzbzlnIiwiZW1haWwiOiJiaGlyc2NoYkBjeWJlcmFybW9yLmlvIiwiYXV0aCI6IlkyRjFjMlZ5T21wWk16VnpiemxuIn19fQ==
type: kubernetes.io/dockerconfigjson

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elastic-reader
  namespace: client
  labels:
    app: elastic-reader
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elastic-reader
  template:
    metadata:
      labels:
        app: elastic-reader
    spec:
      containers:
        - name: elastic-reader
          image: dreg.eust0.cyberarmorsoft.com:443/demoservice:v26
          env:
            - name: SLEEP_DURATION
              value: "2"
            - name: DEMO_TARGETS
              value: "http://elasticsearch-master.logging:9200"
      imagePullSecrets:
        - name: caregcred
---

apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 30000
      nodePort: 30001
  selector:
    app: nginx-ingress
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_rlimit_nofile 8192;
    events {
      worker_connections  4096;
    }
    http {
        server {
            listen      30000;
            listen [::]:30000;
            location / {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://frontend:80;
            }
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress
spec:
  selector:
    matchLabels:
      app: nginx-ingress
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-ingress
    spec:
      containers:
        - name: nginx-ingress
          image: nginx:1.14.2
          ports:
            - containerPort: 30000
          volumeMounts:
            - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
              readOnly: true
              name: nginx-conf
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
            items:
              - key: nginx.conf
                path: nginx.conf
