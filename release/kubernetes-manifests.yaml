# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
data:
  ssl-private-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBclR2QzBlNzFPTzdEMzhrWVdVbXZqUFg3YlFHd2wzWlN2cXNpeVlsb1pqSWZYenpICm5yMjhVMDFzKy9wam9NUmVyVVBEOVVOaVVBWVF2ZkdBOUlmL2lTNEdIOVhCcXdDdGdFQTRWUjFPQTgrTXFyeHcKdHZHSnFOcU9seG94bmdNLzM1WFZ1cStodEprZnVKUUxnTDNybVA0NFpFbVE0aHZ1dmR6eis0NGZuU0JsN25OOAp3SEFiNlBOeG9YRHdjNkJKNXRwM0ZyeEl5MjBKNXUyQmhkVVMrV3Q4YTZJbXdXQnNpUUJvMHJNOHovcC90QnM3CjFMSHRyZXkxWm4wcmVMQmp5KytMcUxCZ3lkNG5rOVBvUkRINi9nRC9pQWtORzJML0xVNmZ3UUxnLzNaZWNHWSsKSjEvdlJpaWx2c251dnA5NjhtL20veXhuV1V0TjZCczJGK0ZVUVFJREFRQUJBb0lCQVFDUE9BY2JWUG03OWZwTwplNHo3MUtXa1hvRmRYN1pGb25kS1YyWk5SS0xoU3JNUkk4ak5mb1BDUXhMRlIvOHlIT2RCUy9Nb1JHdDFTVzV4CitzWG9aTDlwQkhuZnUvTi9rdkhlUkRuT2RJblpNTEJWUDdIWUxkem5rcm1zUnVXYWc0azlLajBuT0tqeURGNWoKVlZJbFA5OFYvNmRUa2xhTCtSZnFORkFxT3hmNzZENXVtRVJ6SEE1NDhEY0tyN3UwQzEySDlrLzRicmVJN2gzdgpZYnBlaHpBUEhuMlZraUtYYW9pVFRaY2RFTTdhMUFzL1pxSXRML1NvMkJBSWhRNERyU3NBYTMrNjMrSFVhdWw4CnFXNXNHS3ZMRzg1dlAzTytpMDJWR3pTdWF1akY1V3RhZGRMTmZ5bHF2UHd3WHJDaFV1S2RpSUNPNjJnSk1aOFcKRnFaKzdDd2hBb0dCQU4zYkJib3BxZStEdE1NcXhRMVJydTFldlB2ZjU3VkJGMkFGbFYrY2xoajhHZGNmVGlFcQpVMVB0RzYvLzE0WXFTNDVqTXVVOXZLUnRPbnBwVnk5V0hIK05kLzNNRThCQTRsU3JhWU5XazNIUTNENzNackc0CnBMS2pxU2VERmpNV1d5cS9TV21Xa0hxaWVOeUR3ZUx4REl2anlWSmlWNzJ0Y3kvb20veGIyVmpWQW9HQkFNZmwKRGx4emFVUkFTTG4vVHpqb2I4OGFLMTlocVkxajdHdEFIY0Q1djBWN0wzajF6d2JsYmpnd3ZrZGxpU3ZhUzNBSgp5a3BZQTNZWXprK0N2ZjA2VDBGMUJ0M1hlUnBEaTFYOFdaamRtTlFyYjJETUk1cTNtSnFTSU4rYWo2dWhJS09WCjVHRzMwWkZwL0QwWWVFLzkwM21mNmlVY0ZHTDNYZ2JQWEo1Qy8wTzlBb0dBUVQvb21FOG1yczRTdlEvNE1xbWkKaENmSDkyQnNHcEFSV3VscGZGeG1mT1N3aU9lcEovSDEzZ292aVh6Nm0zZ1hEc0s0TmxvSkFHY3J1dEwrbEdxRQpLVE9uWmRxK3VGMmM4NEFTb1ZFMlBsUktZcTZLNHB4R3ZFK01NWlhKVXE4eGt3bjlnbk9JL0xpS1NYanE3bDhzCjdIdkxPMUszTVk4eEFKY3VRWE9XSWgwQ2dZQXBFZFcraHZQVTB3UmVPcWR6UU1aZ0hiZFZsSUk2aTVJeWd1emEKRGpZUE4zME1kQ3lCOVRlTkVlNjJTcFZCVGt0N2pIZGtpT3JGSTltWG1ud2dnQTl5bW5HN3VKNm9GOEtUK3hJSgpoMVgwR2F4N2pkV3UzeFBhaGpWODI0dXpMcHEvSVhmWDMrV040K0d3Ujh2SVc1Vk1ndCtmbWtKU0J4THBnVWM5Ck9QU3JYUUtCZ0NCZGZHdU5jVjZ0OXdsdXQ4Z0NnUlUxOUp2RGVzS25rWVJVdVE0c2JJZkNYcDVBZFlEcXgvVG0KS2xoSXNZUXc1S1NKZ2tKY25aTmpkeDREazY5bWluSFR0bmxxUVNJMSthVzRDVW9ma1hLaHEyUkRzdkNPdmVGQwpoWEgvN3dXR2VsT2hOc0ZVZTltc2NSbkIzVU5ZN1VNVm54WVNqdHZwbXJPTDBpQ0V0YkFECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
kind: Secret
metadata:
  name: ssl-private-key
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.1
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            # - name: DISABLE_TRACING
            #   value: "1"
            - name: DISABLE_PROFILER
              value: "1"
          readinessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 8080
          livenessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 8080
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
    - name: grpc
      port: 5000
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      serviceAccountName: default
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.1
          ports:
            - containerPort: 5050
          readinessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 5050
          livenessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 5050
          env:
            - name: PORT
              value: "5050"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice:3550"
            - name: SHIPPING_SERVICE_ADDR
              value: "shippingservice:50051"
            - name: PAYMENT_SERVICE_ADDR
              value: "paymentservice:50051"
            - name: EMAIL_SERVICE_ADDR
              value: "emailservice:5000"
            - name: CURRENCY_SERVICE_ADDR
              value: "currencyservice:7000"
            - name: CART_SERVICE_ADDR
              value: "cartservice:7070"
          # - name: DISABLE_STATS
          #   value: "1"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
spec:
  type: ClusterIP
  selector:
    app: checkoutservice
  ports:
    - name: grpc
      port: 5050
      targetPort: 5050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.1
          securityContext:
            privileged: true
            capabilities:
              add:
                - "SYS_PTRACE"
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice:3550"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: DISABLE_DEBUGGER
          #   value: "1"
          resources:
            requests:
              cpu: 100m
              memory: 220Mi
            limits:
              cpu: 200m
              memory: 450Mi
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      volumes:
        - name: ssl-private-key-volume
          secret:
            secretName: ssl-private-key
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/frontend:v0.2.1
          securityContext:
            privileged: true
            capabilities:
              add:
                - "SYS_PTRACE"
          volumeMounts:
            - name: ssl-private-key-volume
              mountPath: /etc/ssl
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice:3550"
            - name: CURRENCY_SERVICE_ADDR
              value: "currencyservice:7000"
            - name: CART_SERVICE_ADDR
              value: "cartservice:7070"
            - name: RECOMMENDATION_SERVICE_ADDR
              value: "recommendationservice:8080"
            - name: SHIPPING_SERVICE_ADDR
              value: "shippingservice:50051"
            - name: CHECKOUT_SERVICE_ADDR
              value: "checkoutservice:5050"
            - name: AD_SERVICE_ADDR
              value: "adservice:9555"
            - name: ENV_PLATFORM
              value: "gcp"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice-external
spec:
  type: LoadBalancer
  selector:
    app: currencyservice
  ports:
    - name: http
      port: 7000
      targetPort: 7000
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice-external
spec:
  type: LoadBalancer
  selector:
    app: productcatalogservice
  ports:
    - name: http
      port: 3550
      targetPort: 3550
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice-external
spec:
  type: LoadBalancer
  selector:
    app: shippingservice
  ports:
    - name: http
      port: 50051
      targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
spec:
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.1
          ports:
            - containerPort: 50051
          env:
            - name: PORT
              value: "50051"
          readinessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 50051
          livenessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 50051
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
spec:
  type: ClusterIP
  selector:
    app: paymentservice
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.1
          ports:
            - containerPort: 3550
          env:
            - name: PORT
              value: "3550"
          # - name: DISABLE_STATS
          #   value: "1"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          readinessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 3550
          livenessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 3550
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
spec:
  type: ClusterIP
  selector:
    app: productcatalogservice
  ports:
    - name: grpc
      port: 3550
      targetPort: 3550
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.1
          ports:
            - containerPort: 7070
          env:
            - name: REDIS_ADDR
              value: "redis-cart:6379"
            - name: PORT
              value: "7070"
            - name: LISTEN_ADDR
              value: "0.0.0.0"
          resources:
            requests:
              cpu: 200m
              memory: 64Mi
            limits:
              cpu: 300m
              memory: 128Mi
          readinessProbe:
            initialDelaySeconds: 15
            tcpSocket:
              port: 7070
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 10
            tcpSocket:
              port: 7070
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
spec:
  type: ClusterIP
  selector:
    app: cartservice
  ports:
    - name: grpc
      port: 7070
      targetPort: 7070
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      restartPolicy: Always
      containers:
        - name: main
          image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.2.1
          env:
            - name: FRONTEND_ADDR
              value: "frontend:80"
            - name: USERS
              value: "10"
          resources:
            requests:
              cpu: 300m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
spec:
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.1
          ports:
            - name: grpc
              containerPort: 7000
          env:
            - name: PORT
              value: "7000"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: DISABLE_DEBUGGER
          #   value: "1"
          readinessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 7000
          livenessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 7000
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
spec:
  type: ClusterIP
  selector:
    app: currencyservice
  ports:
    - name: grpc
      port: 7000
      targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.1
          securityContext:
            privileged: true
            capabilities:
              add:
                - "SYS_PTRACE"
          ports:
            - containerPort: 50051
          env:
            - name: PORT
              value: "50051"
          # - name: DISABLE_STATS
          #   value: "1"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          readinessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 50051
          livenessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 50051
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
spec:
  type: ClusterIP
  selector:
    app: shippingservice
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
spec:
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      containers:
        - name: redis
          image: redis:alpine
          ports:
            - containerPort: 6379
          readinessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 6379
          livenessProbe:
            periodSeconds: 10
            tcpSocket:
              port: 6379
          volumeMounts:
            - mountPath: /data
              name: redis-data
          resources:
            limits:
              memory: 256Mi
              cpu: 125m
            requests:
              cpu: 70m
              memory: 200Mi
      volumes:
        - name: redis-data
          emptyDir: { }
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
spec:
  type: ClusterIP
  selector:
    app: redis-cart
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart-for-dev-home
spec:
  type: NodePort
  selector:
    app: redis-cart
  ports:
    - name: tcp
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/adservice:v0.2.1
          ports:
            - containerPort: 9555
          env:
            - name: PORT
              value: "9555"
          # - name: DISABLE_STATS
          #   value: "1"
          # - name: DISABLE_TRACING
          #   value: "1"
          #- name: JAEGER_SERVICE_ADDR
          #  value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 200m
              memory: 180Mi
            limits:
              cpu: 300m
              memory: 300Mi
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 15
            tcpSocket:
              port: 9555
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 15
            tcpSocket:
              port: 9555
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
    - name: grpc
      port: 9555
      targetPort: 9555
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-tester
  labels:
    app: frontend-tester
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-tester
  template:
    metadata:
      labels:
        app: frontend-tester
    spec:
      containers:
        - name: frontend-tester
          image: quay.io/armosec/demoservice:v1-debian
          securityContext:
            privileged: true
            capabilities:
              add:
                - "SYS_PTRACE"
          env:
            - name: THREAD_TIMEOUT
              value: "10"
            - name: SLEEP_DURATION
              value: "1"
            - name: DEMO_TARGETS
              value: "http://frontend:80"
---
apiVersion: v1
kind: Service
metadata:
  name: bi-monitor-external
spec:
  type: LoadBalancer
  selector:
    app: bi-monitor
  ports:
    - name: http
      port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bi-monitor
  labels:
    app: bi-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bi-monitor
  template:
    metadata:
      labels:
        app: bi-monitor
    spec:
      containers:
        - name: monitor
          image: quay.io/armosec/demoservice:v1-debian
          env:
            - name: SERVER_PORT
              value: "80"
            - name: THREAD_TIMEOUT
              value: "10"
            - name: SLEEP_DURATION
              value: "1"
            - name: DEMO_TARGETS
              value: "http://redis-cart:6379 http://productcatalogservice:3550 http://es.us-east-2.amazonaws.com:443"
---
apiVersion: v1
kind: Service
metadata:
  name: bi-monitor
spec:
  type: NodePort
  selector:
    app: bi-monitor
  ports:
    - name: tcp
      port: 80
      targetPort: 80
---

apiVersion: v1
kind: Service
metadata:
  name: tester-from-dev-home
spec:
  type: NodePort
  selector:
    app: frontend-tester
  ports:
    - name: tcp
      port: 80
      targetPort: 8080