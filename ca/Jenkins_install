pipeline {
    agent { label 'HIPSTER1' }
    stages {
        stage('Login to CyberArmor') {
            steps {
                sh '''
                cacli login -e ${CA_ENVIRONMENT} -u ${CA_USERNAME} -p ${CA_PASSWORD} -c ${CA_CUSTOMER}
                '''
            }
        }
        
        stage('Install CyberArmor in cluster') {
            steps {
                sh '''
                kubectl delete namespace cyberarmor-system || true
                cacli cluster unregister -n HipsterShopCluster || true
                '''
                sh '''
                cacli wt list | python3 -c "import json,sys;d=json.load(sys.stdin);print('\n'.join(filter(lambda s: s.count('cluster-HipsterShopCluster'),d)))" | xargs -L1 cacli cleanup -wlid $@  || true
                '''
                sh '''
                cacli cluster register -n HipsterShopCluster -o install.sh
                ./install.sh -u ${CA_USERNAME} -p ${CA_PASSWORD} -c ${CA_CUSTOMER}
                '''
            }
        }

        stage('Add basic policy') {
            steps {
                sh 'cacli np delete -n HipsterShop-Basic-Policy || true'
                sh 'cacli np delete -n HipsterShop-Cross-Namespace-Deny-Policy || true'
                sh 'cacli np delete -n HipsterShop-Block-Policy || true'
                sh 'cacli np create -i ./network-policies/basic-policy.yaml'
                sh 'cacli np create -i ./network-policies/cluster-policy.yaml'
            }
        }

        stage('Injecting CyberArmor in namespaces') {
            steps {
                sh '''
                sleep 80
                kubectl create namespace dev || true
                kubectl create namespace prod || true
                kubectl label namespace dev injectCyberArmor=add
                kubectl label namespace prod injectCyberArmor=add
                '''
            }
        }
    }
}
