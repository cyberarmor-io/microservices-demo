---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  labels:
    app: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
        - name: client
          image: dreg.eust0.cyberarmorsoft.com:443/demoservice:v26
          env:
            - name: THREAD_TIMEOUT
              value: "10"
            - name: SLEEP_DURATION
              value: "0.05"
            - name: DEMO_TARGETS
              value: "http://frontend:80"
      imagePullSecrets:
        - name: caregcred
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 30000
      nodePort: 30000
  selector:
    app: nginx-ingress
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_rlimit_nofile 8192;
    events {
      worker_connections  4096;
    }
    http {
        server {
            listen      30000 ssl;
            listen [::]:30000 ssl;
            location / {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://frontend:80;
            }
        ssl_certificate     /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        ssl_ciphers         EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
        ssl_protocols       TLSv1.1 TLSv1.2;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress
spec:
  selector:
    matchLabels:
      app: nginx-ingress
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-ingress
    spec:
      containers:
        - name: nginx-ingress
          image: nginx:1.18.0
          securityContext:
            capabilities:
              add: ["SYS_PTRACE"]
          env:
            - name: CAA_LITTLE_BOY
              value: "1"
          ports:
            - containerPort: 30000
          volumeMounts:
            - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
              readOnly: true
              name: nginx-conf
            - mountPath: "/etc/nginx/ssl"
              name: nginx-ssl
              readOnly: false
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: nginx-ssl
          secret:
            secretName: nginx-ssl
